getmode(AREA)
median(PRICE)
median(AREA)
# variability measures
range(PRICE)
range(AREA)
IQR(PRICE)
IQR(AREA)
var(PRICE)
var(AREA)
sd(PRICE)
sd(AREA)
# STAGE 3
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_area_price)
print(corr)
ggcorrplot(corr)
head(train, 10)
length(train)
hist(PRICE)
hist(AREA)
mean(PRICE)
mean(AREA)
getmode(PRICE)
getmode(AREA)
median(PRICE)
median(AREA)
range(PRICE)
range(AREA)
IQR(PRICE)
IQR(AREA)
var(PRICE)
var(AREA)
sd(PRICE)
sd(AREA)
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_area_price)
print(corr)
# importing libraries
library(readr)
library(ggcorrplot)
library(dplyr)
library(ggpubr)
# reading data
data <- read_csv("train.csv")
# variables
PRICE <- data$PRICE
AREA<- data$AREA
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# STAGE 1
# data visualization
hist(PRICE)
hist(AREA)
# STAGE 2
# central tendency measures
mean(PRICE)
mean(AREA)
getmode(PRICE)
getmode(AREA)
median(PRICE)
median(AREA)
# variability measures
range(PRICE)
range(AREA)
IQR(PRICE)
IQR(AREA)
var(PRICE)
var(AREA)
sd(PRICE)
sd(AREA)
# STAGE 3
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_area_price)
print(corr)
ggcorrplot(corr)
head(train, 10)
length(train)
# importing libraries
library(readr)
library(ggcorrplot)
library(dplyr)
library(ggpubr)
# reading data
data <- read_csv("train.csv")
# variables
PRICE <- data$PRICE
AREA<- data$AREA
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# STAGE 1
# data visualization
hist(PRICE)
hist(AREA)
# STAGE 2
# central tendency measures
mean(PRICE)
mean(AREA)
getmode(PRICE)
getmode(AREA)
median(PRICE)
median(AREA)
# variability measures
range(PRICE)
range(AREA)
IQR(PRICE)
IQR(AREA)
var(PRICE)
var(AREA)
sd(PRICE)
sd(AREA)
# STAGE 3
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_area_price)
print(corr)
ggcorrplot(corr)
# importing libraries
library(readr)
library(ggcorrplot)
library(dplyr)
library(ggpubr)
# reading data
data <- read_csv("train.csv")
# variables
PRICE <- data$PRICE
AREA<- data$AREA
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# STAGE 1
# data visualization
hist(PRICE)
hist(AREA)
# STAGE 2
# central tendency measures
mean(PRICE)
mean(AREA)
getmode(PRICE)
getmode(AREA)
median(PRICE)
median(AREA)
# variability measures
range(PRICE)
range(AREA)
IQR(PRICE)
IQR(AREA)
var(PRICE)
var(AREA)
sd(PRICE)
sd(AREA)
# STAGE 3
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_area_price)
print(corr)
ggcorrplot(corr)
corr <- cor(cor_price_area)
print(corr)
ggcorrplot(corr)
# variables
PRICE <- data$PRICE
AREA <- data$AREA
DISTANCE_F_C_C <-data$DISTANCE_F_C_C
FLOOR <- data$FLOOR
FLOOR <- data$FLOOR
MAX_FLOOR <- data$MAX_FLOOR
WINDOWS <- data$WINDOWS
PRICE <- data$PRICE
AREA <- data$AREA
DISTANCE_F_C_C <-data$DISTANCE_F_C_C
FLOOR <- data$FLOOR
MAX_FLOOR <- data$MAX_FLOOR
WINDOWS <- data$WINDOWS
ROOMS - data$ROOMS
hist(PRICE)
hist(AREA)
hist(DISTANCE_F_C_C)
hist(FLOOR)
hist(MAX_FLOOR)
hist(WINDOWS)
hist(ROOMS)
PRICE <- data$PRICE
AREA <- data$AREA
DISTANCE_F_C_C <-data$DISTANCE_F_C_C
FLOOR <- data$FLOOR
MAX_FLOOR <- data$MAX_FLOOR
WINDOWS <- data$WINDOWS
ROOMS - data$ROOMS
ROOMS - data$ROOMS
ROOMS <- data$ROOMS
hist(PRICE)
hist(AREA)
hist(DISTANCE_F_C_C)
hist(FLOOR)
hist(MAX_FLOOR)
hist(WINDOWS)
hist(ROOMS)
# importing libraries
library(readr)
library(ggcorrplot)
library(dplyr)
library(ggpubr)
# reading data
data <- read_csv("train.csv")
# variables
PRICE <- data$PRICE
AREA <- data$AREA
DISTANCE_F_C_C <-data$DISTANCE_F_C_C
FLOOR <- data$FLOOR
MAX_FLOOR <- data$MAX_FLOOR
WINDOWS <- data$WINDOWS
ROOMS <- data$ROOMS
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# STAGE 1
# data visualization
hist(PRICE)
hist(AREA)
hist(DISTANCE_F_C_C)
hist(FLOOR)
hist(MAX_FLOOR)
hist(WINDOWS)
hist(ROOMS)
# STAGE 2
# central tendency measures
mean(PRICE)
mean(AREA)
mean(DISTANCE_F_C_C)
mean(FLOOR)
mean(MAX_FLOOR)
mean(WINDOWS)
mean(ROOMS)
getmode(PRICE)
getmode(AREA)
getmode(DISTANCE_F_C_C)
getmode(FLOOR)
getmode(MAX_FLOOR)
getmode(WINDOWS)
getmode(ROOMS)
median(PRICE)
median(AREA)
median(DISTANCE_F_C_C)
median(FLOOR)
median(MAX_FLOOR)
median(WINDOWS)
median(ROOMS)
# variability measures
range(PRICE)
range(AREA)
range(DISTANCE_F_C_C)
range(FLOOR)
range(MAX_FLOOR)
range(WINDOWS)
range(ROOMS)
IQR(PRICE)
IQR(AREA)
IQR(DISTANCE_F_C_C)
IQR(FLOOR)
IQR(MAX_FLOOR)
IQR(WINDOWS)
IQR(ROOMS)
var(PRICE)
var(AREA)
var(DISTANCE_F_C_C)
var(FLOOR)
var(MAX_FLOOR)
var(WINDOWS)
var(ROOMS)
sd(PRICE)
sd(AREA)
sd(DISTANCE_F_C_C)
sd(FLOOR)
sd(MAX_FLOOR)
sd(WINDOWS)
sd(ROOMS)
# STAGE 3
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_price_area)
print(corr)
ggcorrplot(corr)
ggscatter(main, x = "AREA", y = "PRICE",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "AREA", y = "PRICE",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
# importing libraries
library(readr)
library(ggcorrplot)
library(dplyr)
library(ggpubr)
# reading data
data <- read_csv("train.csv")
# variables
PRICE <- data$PRICE
AREA <- data$AREA
DISTANCE_F_C_C <-data$DISTANCE_F_C_C
FLOOR <- data$FLOOR
MAX_FLOOR <- data$MAX_FLOOR
WINDOWS <- data$WINDOWS
ROOMS <- data$ROOMS
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# STAGE 1
# data visualization
hist(PRICE)
hist(AREA)
hist(DISTANCE_F_C_C)
hist(FLOOR)
hist(MAX_FLOOR)
hist(WINDOWS)
hist(ROOMS)
# STAGE 2
# central tendency measures
mean(PRICE)
mean(AREA)
mean(DISTANCE_F_C_C)
mean(FLOOR)
mean(MAX_FLOOR)
mean(WINDOWS)
mean(ROOMS)
getmode(PRICE)
getmode(AREA)
getmode(DISTANCE_F_C_C)
getmode(FLOOR)
getmode(MAX_FLOOR)
getmode(WINDOWS)
getmode(ROOMS)
median(PRICE)
median(AREA)
median(DISTANCE_F_C_C)
median(FLOOR)
median(MAX_FLOOR)
median(WINDOWS)
median(ROOMS)
# variability measures
range(PRICE)
range(AREA)
range(DISTANCE_F_C_C)
range(FLOOR)
range(MAX_FLOOR)
range(WINDOWS)
range(ROOMS)
IQR(PRICE)
IQR(AREA)
IQR(DISTANCE_F_C_C)
IQR(FLOOR)
IQR(MAX_FLOOR)
IQR(WINDOWS)
IQR(ROOMS)
var(PRICE)
var(AREA)
var(DISTANCE_F_C_C)
var(FLOOR)
var(MAX_FLOOR)
var(WINDOWS)
var(ROOMS)
sd(PRICE)
sd(AREA)
sd(DISTANCE_F_C_C)
sd(FLOOR)
sd(MAX_FLOOR)
sd(WINDOWS)
sd(ROOMS)
# STAGE 3
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_price_area)
print(corr)
ggcorrplot(corr)
ggscatter(data, x = "AREA", y = "PRICE",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "AREA", y = "DISRANCE_F_C_C",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "AREA", y = "DISTANCE_F_C_C",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "PRICE", y = "DISTANCE_F_C_C",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "AREA", y = "ROOMS",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "WINDOWS", y = "ROOMS",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
LM <- lm(PRICE ~ AREA, data = data)
LM
LM <- lm(PRICE ~ AREA + DISTANCE_F_C_C, data = data)
LM
model<-glm(PRICE~AREA , data=data)
test <- read_csv("test.csv")
prediction<- predict(model, test)
prediction
model <-glm(PRICE~AREA + DISTANCE_F_C_C, data=data)
prediction <- predict(model, test)
prediction
model <-glm(PRICE ~ AREA + DISTANCE_F_C_C, data=data)
prediction <- predict(model, test)
prediction
write.csv(prediction,".\predictions.csv", row.names = FALSE)
write.csv(prediction,"predictions.csv", row.names = FALSE)
prediction
write.csv(prediction,"predictions.csv", row.names = FALSE)
write.csv(prediction,"predictions.csv", row.names = FALSE)
library(readr)
predictions <- read_csv("predictions.csv")
View(predictions)
library(readr)
result <- read_csv("result.csv")
View(result)
hist(PRICE)
hist(AREA)
hist(DISTANCE_F_C_C)
hist(FLOOR)
hist(MAX_FLOOR)
hist(WINDOWS)
hist(ROOMS)
mean(PRICE)
mean(AREA)
mean(DISTANCE_F_C_C)
mean(FLOOR)
mean(MAX_FLOOR)
mean(WINDOWS)
mean(ROOMS)
getmode(PRICE)
getmode(AREA)
getmode(DISTANCE_F_C_C)
getmode(FLOOR)
getmode(MAX_FLOOR)
getmode(WINDOWS)
getmode(ROOMS)
median(PRICE)
median(AREA)
median(DISTANCE_F_C_C)
median(FLOOR)
median(MAX_FLOOR)
median(WINDOWS)
median(ROOMS)
range(PRICE)
range(AREA)
range(DISTANCE_F_C_C)
range(FLOOR)
range(MAX_FLOOR)
range(WINDOWS)
range(ROOMS)
IQR(PRICE)
IQR(AREA)
IQR(DISTANCE_F_C_C)
IQR(FLOOR)
IQR(MAX_FLOOR)
IQR(WINDOWS)
IQR(ROOMS)
var(PRICE)
var(AREA)
var(DISTANCE_F_C_C)
var(FLOOR)
var(MAX_FLOOR)
var(WINDOWS)
var(ROOMS)
sd(PRICE)
sd(AREA)
sd(DISTANCE_F_C_C)
sd(FLOOR)
sd(MAX_FLOOR)
sd(WINDOWS)
sd(ROOMS)
mean(PRICE)
onlynums <- data[ , unlist(lapply(data, is.numeric))]
cor_price_area <- data %>% select(PRICE, AREA, `PRICE`, 'AREA')
corr <- cor(cor_price_area)
print(corr)
ggcorrplot(corr)
ggscatter(data, x = "AREA", y = "PRICE",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "WINDOWS", y = "ROOMS",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
ggscatter(data, x = "AREA", y = "PRICE",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Area", ylab = "Price")
model <-glm(PRICE ~ AREA + DISTANCE_F_C_C, data=data)
LM <- lm(PRICE ~ AREA + DISTANCE_F_C_C, data = data)
LM
